"""init

Revision ID: 47a66bf9b210
Revises: 13feee3e626c
Create Date: 2022-12-15 18:05:00.849775

"""
import datetime

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '47a66bf9b210'
down_revision = '13feee3e626c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'books',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.Text(), nullable=False, comment='Название книги'),
        sa.Column('isbn', sa.Text(), nullable=False, comment='Шифр книг'),
        sa.Column('edition', sa.Integer(), nullable=False, comment='Тираж'),
        sa.Column('expenses', sa.Float(), nullable=False, comment='Себестоимость'),
        sa.Column('publication_date', sa.Date(), nullable=False, comment='Дата выхода из печати'),
        sa.Column('price', sa.Float(), nullable=False, comment='Цена продажи'),
        sa.Column('total_royalti', sa.Float(), nullable=False, comment='Гонорар (на всех авторов книги)'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_books'))
    )
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('first_name', sa.String(length=256), nullable=False, comment='Имя'),
        sa.Column('last_name', sa.String(length=256), nullable=False, comment='Фамилия'),
        sa.Column('middle_name', sa.String(length=256), nullable=False, comment='Отчество'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table(
        'authors',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('passport', sa.String(length=256), nullable=False, comment='Номер паспорта'),
        sa.Column('address', sa.Text(), nullable=False, comment='Домашний адрес'),
        sa.Column('phone', sa.String(length=256), nullable=False, comment='Телефон'),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_authors_user_id_users')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_authors'))
    )
    op.create_table(
        'customers',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=512), nullable=False, comment='Название заказчика'),
        sa.Column('address', sa.Text(), nullable=False, comment='Адрес заказчика'),
        sa.Column('phone', sa.String(length=128), nullable=False, comment='Телефон заказчика'),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='Контактное лицо'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_customers_user_id_users')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_customers'))
    )
    op.create_table(
        'book_authors',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('book_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['author_id'],
            ['authors.id'],
            name=op.f('fk_book_authors_author_id_authors')
        ),
        sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_book_authors_book_id_books')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_book_authors'))
    )
    op.create_table(
        'contracts',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('number', sa.Integer(), nullable=False, comment='Номер контракта'),
        sa.Column('signing_date', sa.DateTime(), nullable=False),
        sa.Column('term', sa.Integer(), nullable=False, comment='Срок контракта'),
        sa.Column(
            'is_terminate',
            sa.Boolean(),
            server_default='false',
            nullable=True,
            comment='Расторгнут ли контракт'
        ),
        sa.Column('terminate_date', sa.DateTime(), nullable=True, comment='Дата расторжения контракта'),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name=op.f('fk_contracts_author_id_authors')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_contracts'))
    )
    op.create_table(
        'orders',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('identifier', sa.Integer(), nullable=False, comment='Номер заказа'),
        sa.Column('book_id', sa.Integer(), nullable=False),
        sa.Column('customer_id', sa.Integer(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(),
            nullable=False,
            comment='Дата поступления заказ в том числе',
            on_create=datetime.datetime(2022, 12, 15, 13, 5, 0, 629573)
        ),
        sa.Column('closed_at', sa.DateTime(), nullable=True, comment='Дата выполнения заказа'),
        sa.Column('count', sa.Integer(), nullable=False, comment='Количество экземпляров заказываемой книги'),
        sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_orders_book_id_books')),
        sa.ForeignKeyConstraint(
            ['customer_id'],
            ['customers.id'],
            name=op.f('fk_orders_customer_id_customers')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('contracts')
    op.drop_table('book_authors')
    op.drop_table('customers')
    op.drop_table('authors')
    op.drop_table('users')
    op.drop_table('books')
    # ### end Alembic commands ###
